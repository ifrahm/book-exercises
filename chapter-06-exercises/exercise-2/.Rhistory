great_white = 20.0,
thresher = 20.0,
goblin = 12.6)
?list
shark_length[-4]
shark_length[-4]
earthquakes <- c(6.8, 5.3, 5.0, 7.3, 7.1, 6.3, 5.5)
earthquakes[ > 6.5]
earthquakes[earthquakes> 6.5]
sharks <- c("Hammerhead", "Great White", "Thresher")
updated_sharks <- c(Sharks, Goblin)
print(updated_sharks)
filter <- c(TRUE, FALSE, FALSE, TRUE, FALSE, TRUE)
endangered <- c("Blue Whale", "Bluefin Tuna", "Galapago Penguin", "Florida Manatee", "Hawksbill Turtle", "Sea Otter")
print(endangered(filter))
print(endangered)
print(endangered[filter])
long_titles <- books[books > 15]
print(long_titles)
print(books)
change_year <- function(date_value, year){
date_as_string <- as.character(date_value)
month_day <- substr(date_value,5,6 )
new_date <- paste(date_as_string, month_day)
results <- as.Date(new_date)
return(results)
}
change_year(2020-01-06,2025)
?substr
change_year <- function(date_value, year){
date_as_string <- as.character(date_value)
month_day <- substr(date_as_string,6, nchar(date_value))
new_date <- paste(date_as_string, month_day)
results <- as.Date(new_date)
return(results)
}
change_year(2020-01-06,2025)
change_year <- function(date_value, year){
date_as_string <- as.character(date_value)
month_day <- substr(date_as_string,6, nchar(date_value))
new_date <- paste(date_as_string, month_day)
results <- as.Date(new_date)
return(results)
}
change_year(2020-01-06,2025)
change_year(as.Date("2020-01-06"),2025)
change_year <- function(date_value, year){
date_as_string <- as.character(date_value)
month_day <- substr(date_as_string,6, nchar(date_value))
new_date <- paste(year, month_day)
results <- as.Date(new_date)
return(results)
}
change_year(as.Date("2020-01-06"),2025)
#5
change_year <- function(date_value, year){
date_as_string <- as.character(date_value)
month_day <- substr(date_as_string,6, nchar(date_value))
new_date <- paste(year, month_day)
print(new_date)
results <- as.Date(new_date)
return(results)
}
change_year(as.Date("2020-01-06"),2025)
#5
change_year <- function(date_value, year){
date_as_string <- as.character(date_value)
month_day <- substr(date_as_string,6, nchar(date_value))
new_date <- paste(year, month_day)
print(month_day)
results <- as.Date(new_date)
return(results)
}
change_year(as.Date("2020-01-06"),2025)
change_year <- function(date_value, year){
date_as_string <- as.character(date_value)
month_day <- substr(date_as_string,6, nchar(date_as_string))
new_date <- paste(year, month_day)
print(month_day)
results <- as.Date(new_date)
return(results)
}
change_year(as.Date("2020-01-06"),2025)
change_year(as.Date("2020-01-06"),2025)
#5
change_year <- function(date_value, year){
date_as_string <- as.character(date_value)
month_day <- substr(date_as_string,6, nchar(date_as_string))
new_date <- paste(year, month_day)
print(new_date)
results <- as.Date(new_date)
return(results)
}
change_year(as.Date("2020-01-06"),2025)
change_year <- function(date_value, year){
date_as_string <- as.character(date_value)
month_day <- substr(date_as_string,5, nchar(date_as_string))
new_date <- paste(year, month_day)
print(new_date)
results <- as.Date(new_date)
return(results)
}
change_year(as.Date("2020-01-06"),2025)
change_year <- function(date_value, year){
date_as_string <- as.character(date_value)
month_day <- substr(date_as_string,4, nchar(date_as_string))
new_date <- paste(year, month_day)
print(new_date)
results <- as.Date(new_date)
return(results)
}
change_year(as.Date("2020-01-06"),2025)
change_year <- function(date_value, year){
date_as_string <- as.character(date_value)
month_day <- substr(date_as_string,5, nchar(date_as_string))
new_date <- paste0(year, month_day)
print(new_date)
results <- as.Date(new_date)
return(results)
}
change_year(as.Date("2020-01-06"),2025)
change_year <- function(date_value, year){
date_as_string <- as.character(date_value)
month_day <- substr(date_as_string,5, nchar(date_as_string))
new_date <- paste0(year, month_day)
results <- as.Date(new_date)
return(results)
}
change_year(as.Date("2020-01-06"),2025)
change_year(spring_break, 2025)
spring_break_2025 <- change_year(spring_break, 2025)
print(spring_break_2025)
class(spring_break_2025)
change_year <- function(date_value, year){
date_as_string <- as.character(date_value)
month_day <- substr(date_as_string,5, nchar(date_as_string))
new_date_string <- paste0(year, month_day)
new_date <- as.Date(new_date)
return(new_date)
}
spring_break_2025 <- change_year(spring_break, 2025)
print(spring_break_2025)
class(spring_break_2025)
change_year <- function(date_value, year){
date_as_string <- as.character(date_value)
month_day <- substr(date_as_string,5, nchar(date_as_string))
new_date_string <- paste0(year, month_day)
new_date <- as.Date(new_date_string)
return(new_date)
}
spring_break_2025 <- change_year(spring_break, 2025)
print(spring_break_2025)
class(spring_break_2025)
date_has_passed <- function(date_value){
date_difference <-Sys.Date() - date_value
return(date_difference)
}
#8
date_has_passed(2020-01-23)
date_has_passed <- function(date_value){
date_difference <-(Sys.Date() - date_value) > 0
return(date_difference)
}
date_has_passed(2020-01-23)
date_has_passed <- function(date_value){
date_difference <-(date_value - Sys.Date()) > 0
return(date_difference)
}
#8
date_has_passed(2020-01-23)
date_has_passed <- function(date_value){
date_difference <-(date_value - Sys.Date()) > 0
return(date_difference)
}
date_has_passed(2020-01-23)
date_has_passed("2020-01-23")
date_has_passed <- function(date_value){
date_difference <-[Sys.Date() - date_value] > 0
return(date_difference)
}
#8
date_has_passed(2020-01-23)
date_has_passed <- function(date_value){
date_difference <-[Sys.Date() - date_value] > 0
return(date_difference)
}
date_has_passed <- function(date_value){
date_difference <- (Sys.Date() - date_value) > 0
return(date_difference)
}
date_has_passed(2020-01-23)
date_has_passed <- function(date_value){
date_difference <- (Sys.Date() - date_value) > 0
print(date_difference)
return(date_difference)
}
#8
date_has_passed(2020-01-23)
date_has_passed <- function(date_value){
date_difference <- (Sys.Date() - date_value) > 0
print(Sys.Date() - date_value)
return(date_difference)
}
#8
date_has_passed(2020-01-23)
date_has_passed <- function(date_value){
date_difference <- (Sys.Date() - date_value) > 0
print(as.numeric(Sys.Date() - date_value))
return(date_difference)
}
#8                  ??
date_has_passed(2020-01-23)
birthdays <- list(my_birthday = as.Date(1999-09-10), ilham_birthday = as.Date(2006-05-13), sumaya_birthday = as.Date(2002-05-19), mo_birthday = as.Date(1997-08-15), mom_birthday = as.Date(1976-01-01), dad_birthday = as.Date(1967-02-01))
?as.date
?as.Date
birthdays <- list(my_birthday = as.Date("1999-09-10"), ilham_birthday = as.Date("2006-05-13"), sumaya_birthday = as.Date("2002-05-19"), mo_birthday = as.Date("1997-08-15"), mom_birthday = as.Date("1976-01-01"), dad_birthday = as.Date("1967-02-01"))
print(birthdays)
birthdays <- list(my_birthday = as.Date("1999-09-10"), i_birthday = as.Date("2006-05-13"), s_birthday = as.Date("2002-05-19"), mo_birthday = as.Date("1997-08-15"), mom_birthday = as.Date("1976-01-01"), dad_birthday = as.Date("1967-02-01"))
print(birthdays)
birthdays <- list(me = as.Date("1999-09-10"), il = as.Date("2006-05-13"), su = as.Date("2002-05-19"), mo = as.Date("1997-08-15"), mom_birthday = as.Date("1976-01-01"), dad_birthday = as.Date("1967-02-01"))
print(birthdays)
date_has_passed <- function(date_value) {
date_difference <- (Sys.Date() - date_value) > 0
print(Sys.Date() - date_value)
return(date_difference)
}
date_has_passed(2020-01-23)
Sys.Date()
date_has_passed(as.Date(2020-01-23))
date_has_passed(as.Date("2020-01-23"))
#8                  ??
date_has_passed(as.Date("2020-01-23"))
print(as.Date("2020-01-23"))
unlist(as.Date("2020-01-23"))
unclass(as.Date("2020-01-23"))
names(as.Date("2020-01-23"))
?as.Date
any(squared_numbers==numbers)
sapply(numbers, function(x)any(x==squared_numbers))
numbers[sapply(numbers, function(x)any(x==squared_numbers))]
numbers[lapply(numbers, function(x)any(x==squared_numbers))]
?any
perfect_squares <- numbers[lapply(numbers, function(x)any(x==squared_numbers))]
#8                  ??
date_has_passed(as.Date("2020-01-23"))
#8                  ??
date_has_passed(as.Date("2020-01-23"))
get_next_birthday <- function(birthday) {
birthday_2020 <- change_year(birthday,2020)
date_has_passed(birthday_2020)
return(next_birthday)
}
get_next_birthday <- function(birthday) {
next_birthday <- change_year(birthday,2020)
birthday_passed <- date_has_passed(next_birthday)
if(birthday_passed){
next_birthday <- change_year(birthday,2021)
}
return(next_birthday)
}
get_next_birthday(as.Date("1999-09-10"))
get_next_birthday(as.Date("1999-01-10"))
get_next_birthday(birthdays$me)
#12
next_birthdays <- lapply(birthdays, get_next_birthday)
print(birthdays)
#12
next_birthdays <- print(lapply(birthdays, get_next_birthday))
next_birthdays <- (lapply(birthdays, get_next_birthday)
print(next_birthdays)
next_birthdays <- lapply(birthdays, get_next_birthday)
print(next_birthdays)
deadline_pased <- date_has_passed(as.Date("2020-01-23"))
print(deadline_pased)
Sys.Date()
#8
deadline_pased <- date_has_passed(as.Date("2020-01-23"))
print(deadline_pased)
perfect_squares <- numbers(sqrt(numbers) == round(sqrt(numbers)))
perfect_squares <- numbers(sqrt(numbers) == round(sqrt(numbers)))
#1
numbers <- seq(1,201)
perfect_squares <- numbers(sqrt(numbers) == round(sqrt(numbers)))
perfect_squares <- numbers[sqrt(numbers) == round(sqrt(numbers))]
perfect_squares
#5
change_year <- function(date_value, year){
date_as_string <- as.character(date_value)
month_day <- substr(date_as_string,5, nchar(date_as_string))
new_date_string <- paste0(year, month_day)
new_date <- as.Date(new_date_string)
return(new_date)
}
spring_break
spring_break_2025 <- change_year(spring_break, 2025)
spring_break_2025
long_titles <- books[books > 15]
print(long_titles)
long_titles <- books[books > 30]
print(long_titles)
long_titles <- books[books > 15]
print(long_titles)
books > 15
print(books)
#6
#char
long_titles <- books[nchar(books) > 15]
print(long_titles)
#1
books <- c("How to Win Friends and Influence People","The Magic of Thinking Big","12 Rules of Life","You Are a Badass","Think and Grow Rich","Managing Oneself", "hello")
print(books)
#6
#char
long_titles <- books[nchar(books) > 15]
print(long_titles)
#6
#char
long_titles <- books[nchar(books) > 15]
remove_book <- function(vector,index_num){
new_vector <- vector[index_num]
return(new_vector)
}
books_without_five <- remove_book(books,-5)
print(books_without_five)
books <- c("How to Win Friends and Influence People","The Magic of Thinking Big","12 Rules of Life","You Are a Badass","Think and Grow Rich","Managing Oneself")
print(books)
print(books)
books <- c("How to Win Friends and Influence People","The Magic of Thinking Big","12 Rules of Life","You Are a Badass","Think and Grow Rich","Managing Oneself")
print(books)
top_three_books <- books[1:3]
print(top_three_books)
remove_book <- function(vector,index_num){
new_vector <- vector[index_num]
return(new_vector)
}
books_without_five <- remove_book(books,-5)
print(books_without_five)
remove_book <- function(book_vector,index_num){
new_vector <- book_vector[-index_num]
return(new_vector)
}
books_without_five <- remove_book(books,5)
print(books_without_five)
remove_book <- function(book_vector,index_num){
new_vector <- book_vector[-index_num]
print(-index_num)
return(new_vector)
}
#5
books_without_five <- remove_book(books,5)
print(books_without_five)
make_introduction <- function(first_name, age){
intro <- paste("Hello, my name is", first_name, "and I'm ", age, "years old.")
return(intro)
}
my_intro <- make_introduction(my_name,my_age)
print(my_intro)
make_introduction <- function(first_name, age){
intro <- paste("Hello, my name is", first_name, "and I'm ", age, "years old.")
return(intro)
}
my_intro <- make_introduction(my_name,my_age)
print(my_intro)
source('~/Desktop/Info 201/a2-core-skills-ifrahm/assignment.R')
source('~/Desktop/Info 201/a2-core-skills-ifrahm/assignment.R')
source('~/Desktop/Info 201/a2-core-skills-ifrahm/assignment.R')
make_introduction <- function(first_name, age){
intro <- paste("Hello, my name is", first_name, "and I'm ", age, "years old.")
return(intro)
}
my_intro <- make_introduction(my_name,my_age)
print(my_intro)
casual_intro <- gsub("Hello, my name is", "Hey, I'm", my_intro)
print(casual_intro)
capital_intro <- str_to_title(my_intro)
print(capital_intro)
intro_e_count <- str_count(my_intro, "e")
print(intro_e_count)
intro_e_count <- str_count(my_intro, "m")
print(intro_e_count)
?str_count
intro_e_count <- str_count("m", my_intro)
print(intro_e_count)
intro_e_count <- str_count("e", my_intro)
print(intro_e_count)
print(my_intro)
intro_e_count <- str_count(my_intro, "e")
print(intro_e_count)
intro_e_count <- str_count(my_intro, "m")
print(intro_e_count)
intro_e_count <- str_count(my_intro, "l")
print(intro_e_count)
intro_e_count <- str_count(my_intro, "x")
print(intro_e_count)
intro_e_count <- str_count(my_intro, "y")
print(intro_e_count)
books <- c("How to Win Friends and Influence People","The Magic of Thinking Big",
"12 Rules of Life","You Are a Badass","Think and Grow Rich","Managing Oneself")
print(books)
birthdays <- list(me = as.Date("1999-09-10"), il = as.Date("2006-05-13"),
su = as.Date("2002-05-19"), mo = as.Date("1997-08-15"),
mom = as.Date("1976-01-01"), dad = as.Date("1967-02-01"))
print(birthdays)
top_three_books <- books[1:3]
print(top_three_books)
book_reviews <- paste(books,"is a great read!")
print(book_reviews)
remove_book <- function(books_vector,index_num){
new_vector <- books_vector[-index_num]
return(new_vector)
}
books_without_five <- remove_book(books,5)
print(books_without_five)
long_titles <- books[nchar(books) > 15]
print(long_titles)
numbers <- seq(1,201)
print(numbers)
# 2
squared_numbers <- (numbers * numbers)
print(squared_numbers)
squared_mean <- mean(squared_numbers)
print(squared_mean)
squared_median <- median(squared_numbers)
print(squared_median)
print(perfect_squares)
#the_date <- ()
spring_break <- as.Date("03/21/2020", "%m/%d/%y")
print(spring_break)
class(spring_break)
#3
today <- Sys.Date()
class(today)
days_to_break <- difftime(spring_break, today)
print(days_to_break)
change_year <- function(date_value, year){
date_as_string <- as.character(date_value)
month_day <- substr(date_as_string,5, nchar(date_as_string))
new_date_string <- paste0(year, month_day)
new_date <- as.Date(new_date_string)
return(new_date)
}
spring_break_2025 <- change_year(spring_break, 2025)
print(spring_break_2025)
spring_break_2025 <- change_year(spring_break, 2026)
print(spring_break_2025)
ate_has_passed <- function(date_value,ignore_year = FALSE) {
date_difference <- (Sys.Date() - date_value) > 0
# if(ignore_year = TRUE){
# }
return(date_difference)
}
deadline_pased <- date_has_passed(as.Date("2020-01-23"))
print(deadline_pased)
deadline_pased <- date_has_passed(as.Date("2020-01-22"))
print(deadline_pased)
deadline_pased <- date_has_passed(as.Date("2020-01-23"))
print(deadline_pased)
get_next_birthday(birthdays$me)
date_has_passed <- function(date_value) {
date_difference <- (Sys.Date() - date_value) > 0
return(date_difference)
}
deadline_pased <- date_has_passed(as.Date("2020-01-23"))
print(deadline_pased)
date_has_passed <- function(date_value,ignore_year = FALSE) {
date_difference <- (Sys.Date() - date_value) > 0
if(ignore_year = TRUE){
birthay_passed <- change_year(date_value,2020) > Sys.Date()
return(birthay_passed)
}
return(date_difference)
}
date_has_passed <- function(date_value,ignore_year == FALSE) {
date_difference <- (Sys.Date() - date_value) > 0
if(ignore_year = TRUE){
birthay_passed <- change_year(date_value,2020) > Sys.Date()
return(birthay_passed)
}
return(date_difference)
}
date_has_passed <- function(date_value,ignore_year == FALSE) {
date_difference <- (Sys.Date() - date_value) > 0
if(ignore_year == TRUE){
birthay_passed <- change_year(date_value,2020) > Sys.Date()
return(birthay_passed)
}
return(date_difference)
}
date_has_passed <- function(date_value) {
date_difference <- (Sys.Date() - date_value) > 0
return(date_difference)
}
install.packages("styler")
library("styler")
install.packages("lintr")
library("lintr")
source('~/Desktop/Info 201/a2-core-skills-ifrahm/assignment.R')
lintr::lint_package()
lintr::lint("assignment.R")
lint(assignment)
lint("assignment.R")
source('~/Desktop/Info 201/a2-core-skills-ifrahm/assignment.R')
employees <- paste ("Employee", 1:100)
printt(employees)
?runif
salaries_2017 <- runif(100, 40000, 50000)
adjustments <- runif(100, -5000, 10000)
print(salaries)
# Create a data frame `salaries` by combining the 3 vectors you just made
# Remember to set `stringsAsFactors=FALSE`!
salaries <- data.from(employees, salaries_2017, adjustments)
print(salaries)
